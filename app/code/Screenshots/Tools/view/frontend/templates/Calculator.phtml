<div class="app-container">
  <div class="downloads">
    <h1>Order Calculator</h1>
    <ul class="download-list">
      <li>
        <a href="/pub/apps/ss-calc.apk">
          <img src="/pub/images/platforms/android_icon.png" alt="Download for Android" title="Download for Android" />
        </a>
      </li>
      <li>
        <a href="/pub/apps/SSCalc.app">
          <img src="/pub/images/platforms/apple_icon.png" alt="Download for iOS" title="Download for iOS" />
        </a>
      </li>
    </ul>
  </div>
  <div class="input-section">
    <h3>Product Matrix</h3>
    <div class="input-block input-block--third">
      <select name="matrixSelect" id="matrixSelect">
        <option selected="selected" value="0">Apparel</option>
        <option value="1">Headwear</option>
      </select>
    </div>
  </div>
  <div class="input-section">
    <h3>Print Quantity</h3>
    <div class="input-block input-block--third">
      <label>S-XL</label>
      <input type="number" name="quantity" id="quantity" min="0" max="3000" value="1" required/>
    </div>
    <div class="input-block input-block--third">
      <label>XXL</label>
      <input type="number" name="xlQuantity" id="xlQuantity" min="0" max="3000" value="0" required />
    </div>
    <div class="input-block input-block--third">
      <label>3XL+</label>
      <input type="number" name="xxlQuantity" id="xxlQuantity" min="0" max="3000" value="0" required />
    </div>
  </div>

  <!-- If !prePurchased -->
  <div class="input-section">
    <h3>Product Options</h3>
    <div class="input-block">
      <label>Client Supplied Items</label>
      <select name="prePurchasedOption" id="prePurchasedOption">
        <option selected="selected" value="0">No</option>
        <option value="1">Yes</option>
      </select>
    </div>
    <div class="input-block baseLevelBlock">
      <label>
        Base Level
        <span class="label-help">?</span>
        <div class="label-help-panel">
          Base level is based on the given products base price.
          <ul class="baseLevelTableApparel">
            <li>Level 01 <span class="right">COG $01.00 - $03.00</span></li>
            <li>Level 02 <span class="right">COG $03.01 - $04.00</span></li>
            <li>Level 03 <span class="right">COG $04.01 - $05.00</span></li>
            <li>Level 04 <span class="right">COG $05.01 - $06.00</span></li>
            <li>Level 05 <span class="right">COG $06.01 - $07.00</span></span></li>
            <li>Level 06 <span class="right">COG $07.01 - $08.00</span></li>
            <li>Level 07 <span class="right">COG $08.01 - $09.00</span></li>
            <li>Level 08 <span class="right">COG $09.01 - $11.00</span></li>
            <li>Level 09 <span class="right">COG $11.01 - $13.00</span></li>
            <li>Level 10 <span class="right">COG $13.01 - $15.00</span></li>
          </ul>
          <ul class="baseLevelTableHeadwear">
            <li>Level 01 <span class="right">COG $01.00 - $02.00</span></li>
            <li>Level 02 <span class="right">COG $02.01 - $02.50</span></li>
            <li>Level 03 <span class="right">COG $02.51 - $03.00</span></li>
            <li>Level 04 <span class="right">COG $03.01 - $03.50</span></li>
            <li>Level 05 <span class="right">COG $03.51 - $04.00</span></span></li>
            <li>Level 06 <span class="right">COG $04.01 - $04.50</span></li>
            <li>Level 07 <span class="right">COG $04.51 - $05.00</span></li>
            <li>Level 08 <span class="right">COG $05.01 - $05.50</span></li>
            <li>Level 09 <span class="right">COG $05.51 - $06.00</span></li>
            <li>Level 10 <span class="right">COG $06.01 - $06.50</span></li>
          </ul>
        </div>
      </label>
      <select name="baseLevelOption" id="baseLevelOption">
        <option selected="selected" value="1">Level 1</option>
        <option value="2">Level 2</option>
        <option value="3">Level 3</option>
        <option value="4">Level 4</option>
        <option value="5">Level 5</option>
        <option value="6">Level 6</option>
        <option value="7">Level 7</option>
        <option value="8">Level 8</option>
        <option value="9">Level 9</option>
        <option value="10">Level 10</option>
      </select>
    </div>
  </div>

  <div class="input-section">
    <h3>Print Areas and Colors</h3>
    <div class="input-block input-block--fourth">
      <label>Area 1</label>
      <select name="printArea1" id="printArea1">
        <option selected="selected" value="1">1 Color</option>
        <option value="2">2 Color</option>
        <option value="3">3 Color</option>
        <option value="4">4 Color</option>
        <option value="5">5 Color</option>
        <option value="6">6 Color</option>
      </select>
    </div>

    <div class="input-block input-block--fourth">
      <label>Area 2</label>
      <select name="printArea2" id="printArea2">
        <option selected="selected" value="0">No Print</option>
        <option value="1">1 Color</option>
        <option value="2">2 Color</option>
        <option value="3">3 Color</option>
        <option value="4">4 Color</option>
        <option value="5">5 Color</option>
        <option value="6">6 Color</option>
      </select>
    </div>

    <div class="input-block input-block--fourth">
      <label>Area 3</label>
      <select name="printArea3" id="printArea3">
        <option selected="selected" value="0">No Print</option>
        <option value="1">1 Color</option>
        <option value="2">2 Color</option>
        <option value="3">3 Color</option>
        <option value="4">4 Color</option>
        <option value="5">5 Color</option>
        <option value="6">6 Color</option>
      </select>
    </div>

    <div class="input-block input-block--fourth">
      <label>Area 4</label>
      <select name="printArea4" id="printArea4">
        <option selected="selected" value="0">No Print</option>
        <option value="1">1 Color</option>
        <option value="2">2 Color</option>
        <option value="3">3 Color</option>
        <option value="4">4 Color</option>
        <option value="5">5 Color</option>
        <option value="6">6 Color</option>
      </select>
    </div>
  </div>

  <div class="input-section">
    <h3>Personalizations</h3>
    <div class="input-block input-block--third">
      <label>Personalized Qty</label>
      <input type="number" value="0" name="personalizedQuantity" id="personalizations" min="0" max="3000" />
    </div>

    <div class="input-block input-block--third">
      <label>1 Color #'s'</label>
      <input type="number" value="0" name="1colorNumbers" id="oneColorNumbers" min="0" max="3000" />
    </div>
    <div class="input-block input-block--third">
      <label>2 Color #'s'</label>
      <input type="number" value="0" name="2colorNumbers" id="twoColorNumbers" min="0" max="3000" />
    </div>
  </div>
  <div class="input-section">
    <h3>Color Changes &amp; Transfers</h3>
    <div class="input-block input-block">
      <label>Color Change Quantity</label>
      <input type="number" placeholder="0" name="colorChange" id="colorChanges" min="0" max="3000" />
    </div>
    <div class="input-block input-block">
      <label>Transfer Quantity</label>
      <input type="number" placeholder="0" name="transferQuantity" id="transfers" min="0" max="3000" />
    </div>
  </div>

  <!-- Form Controls -->
  <div class="buttons">
    <a class="btn btn-submit" id="calculateCosts">Calculate</a>
  </div>

  <!-- Results -->
  <div class="results">
    <div class="result-block wholesaleCostPerItem">
      Cost Per Item: <span class="result-price">$<span class="wholesaleCostPerItemDisplay"></span></span>
    </div>
    <div class="result-block wholesaleResult">
      Wholesale Total: <span class="result-price">$<span class="wholesalePriceDisplay"></span></span>
    </div>
    <div class="result-block resaleCostPerItem">
      Suggested Item Retail: <span class="result-price">$<span class="retailCostPerItemDisplay"></span></span>
    </div>
    <div class="result-block retailResult">
      Suggested Order Retail: <span class="result-price">$<span class="retailPriceDisplay"></span></span>
    </div>
  </div>
</div>

<script
  src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
  integrity="sha256-k2WSCIexGzOj3Euiig+TlR8gA0EmPjuc79OEeY5L45g="
  crossorigin="anonymous">
</script>
<script type="text/javascript">
$('.baseLevelTableHeadwear').hide();
var calc = {
  hatMatrixEnabled: false,
  listenType: (navigator.userAgent.toLowerCase().indexOf('edge') != -1) ? 'mouseup' : 'click',
  standardQuantity: 0,
  xlQuantity: 0,
  xxlQuantity: 0,
  standardQuantityTotal: 0,
  xlTotal: 0,
  xxlTotal: 0,
  prePurchaseStatus: 0,
  baseLevelOption: 0,
  baseLevelPrice: 0,
  printQuantity: 0,
  printZones: 0,
  baseColorCost: 0,
  additionalColorCost: 0,
  zone1Total: 0,
  zone2Total: 0,
  zone3Total: 0,
  zone4Total: 0,
  printZone1Colors: 0,
  printZone2Colors: 0,
  printZone3Colors: 0,
  printZone4Colors: 0,
  personalizations: 0,
  personalizationCost: 4,
  personalizationTotal: 0,
  oneColorNumbers: 0,
  oneColorNumberCost: 2,
  oneColorNumberTotal: 0,
  twoColorNumbers: 0,
  twoColorNumberCost: 4,
  twoColorNumberTotal: 0,
  colorChanges: 0,
  colorChangeCost: 5,
  colorChangeTotal: 0,
  transfers: 0,
  transferTotal: 0,
  screenQuantity: 0,
  screenCharge: 5,
  screenTotal: 0,
  retailCharge: 0,
  retailChargeTotal: 0,
  costPerItem: 0,
  retailCostPerItem: 0,
  wholesalePrice: 0,
  retailPrice: 0,
  getPrintZoneTotals: function() {
    /**
     * Calculate print zone totals
     */
    calc.zone1Total = calc.printZone1Colors >= 2 ?
                      calc.baseColorCost + ((calc.printZone1Colors - 1) * calc.additionalColorCost) :
                      calc.baseColorCost;
    calc.zone2Total = calc.printZone2Colors >= 1 ? calc.printZone2Colors >= 2 ?
                      calc.baseColorCost + ((calc.printZone2Colors - 1) * calc.additionalColorCost) :
                      calc.baseColorCost : 0;
    calc.zone3Total = calc.printZone3Colors >= 1 ? calc.printZone3Colors >= 2 ?
                      calc.baseColorCost + ((calc.printZone3Colors - 1) * calc.additionalColorCost) :
                      calc.baseColorCost : 0;
    calc.zone4Total = calc.printZone4Colors >= 1 ? calc.printZone4Colors >= 2 ?
                      calc.baseColorCost + ((calc.printZone4Colors - 1) * calc.additionalColorCost) :
                      calc.baseColorCost : 0;
  },
  calculateQuantityTotals: function() {
    calc.standardQuantityTotal = (calc.standardQuantity * calc.baseLevelPrice);
    calc.xlQuantityTotal       = (calc.xlQuantity * 1.5) + (calc.xlQuantity * calc.baseLevelPrice);
    calc.xxlQuantityTotal      = (calc.xxlQuantity * 2.5) + (calc.xxlQuantity * calc.baseLevelPrice);
  },
  getPrintColors: function() {
    /**
     * Calculate print zone totals
     */
    calc.numberOfPrintColors = Number(calc.printZone1Colors) + Number(calc.printZone2Colors) +
                                Number(calc.printZone3Colors) + Number(calc.printZone4Colors);
  },
  getPrintPrice: function() {
    calc.printPrice = calc.zone1Total + calc.zone2Total + calc.zone3Total + calc.zone4Total;
  },
  getProductTotal: function() {
    calc.productTotal = (calc.standardQuantityTotal + calc.xlQuantityTotal + calc.xxlQuantityTotal);
  },
  getScreenTotal: function() {
    calc.screenTotal = calc.numberOfPrintColors * calc.screenCharge;
  },
  displayResults: function(wholesalePrice, retailPrice, costPerItem, retailCostPerItem) {
    /**
     * Update view with the calculated totals
     * @var [type]
     */
    var wholesalePrice    = calc.wholesalePrice.toFixed(2),
        retailPrice       = calc.retailPrice.toFixed(2),
        costPerItem       = calc.costPerItem.toFixed(2),
        retailCostPerItem = calc.retailCostPerItem.toFixed(2);

    $('.wholesalePriceDisplay').html(wholesalePrice);
    $('.retailPriceDisplay').html(retailPrice);
    $('.wholesaleCostPerItemDisplay').html(costPerItem);
    $('.retailCostPerItemDisplay').html(retailCostPerItem);
  },
  calculate: function() {
    calc.standardQuantity      = Number($('#quantity').val()),
    calc.xlQuantity            = Number($('#xlQuantity').val()),
    calc.xxlQuantity           = Number($('#xxlQuantity').val()),
    calc.standardQuantityTotal = 0,
    calc.xlTotal               = 0,
    calc.xxlTotal              = 0,
    calc.prePurchaseStatus     = $('#prePurchasedOption').val(),
    calc.baseLevelOption       = $('#baseLevelOption').val (),
    calc.baseLevelPrice        = 0,
    calc.printQuantity         = (calc.standardQuantity + calc.xlQuantity + calc.xxlQuantity),
    calc.printZones            = 1,
    calc.zone1Total            = 0,
    calc.zone2Total            = 0,
    calc.zone3Total            = 0,
    calc.zone4Total            = 0,
    calc.printZone1Colors      = Number($('#printArea1').val()),
    calc.printZone2Colors      = Number($('#printArea2').val()),
    calc.printZone3Colors      = Number($('#printArea3').val()),
    calc.printZone4Colors      = Number($('#printArea4').val()),
    calc.personalizations      = Number($('#personalizations').val()),
    calc.personalizationTotal  = calc.personalizations * calc.personalizationCost,
    calc.oneColorNumbers       = Number($('#oneColorNumbers').val()),
    calc.oneColorNumberTotal   = calc.oneColorNumbers * calc.oneColorNumberCost,
    calc.twoColorNumbers       = Number($('#twoColorNumbers').val()),
    calc.twoColorNumberTotal   = calc.twoColorNumbers * calc.twoColorNumberCost,
    calc.colorChanges          = Number($('#colorChanges').val()),
    calc.colorChangeTotal      = calc.colorChanges * calc.colorChangeCost,
    calc.transfers             = Number($('#transfers').val()),
    calc.transferTotal         = calc.transfers * .25,
    calc.screenQuantity        = 0,
    calc.screenCharge          = 5,
    calc.screenTotal           = 0,
    calc.retailCharge          = 0,
    calc.retailChargeTotal     = 0,
    calc.costPerItem           = 0,
    calc.retailCostPerItem     = 0,
    calc.wholesalePrice        = 0,
    calc.retailPrice           = 0,
    calc.baseColorCost         = 0,
    calc.additionalColorCost   = 0;

    /**
     * Assign color costs (base and additional) based on printQuantity
     */
    if (calc.printQuantity <= 23) {
      calc.baseColorCost = 2.90;
      calc.additionalColorCost = 1;
    } else if (calc.printQuantity >= 24 && calc.printQuantity <= 35) {
      calc.baseColorCost = 2.30;
      calc.additionalColorCost = 0.75;
    } else if (calc.printQuantity >= 36 && calc.printQuantity <= 47) {
      calc.baseColorCost = 1.70;
      calc.additionalColorCost = 0.50;
    } else if (calc.printQuantity >= 48 && calc.printQuantity <= 71) {
      calc.baseColorCost = 1.50;
      calc.additionalColorCost = 0.25;
    } else if (calc.printQuantity >= 72 && calc.printQuantity <= 143) {
      calc.baseColorCost = 1.20;
      calc.additionalColorCost = 0.15;
    } else if (calc.printQuantity >= 144 && calc.printQuantity <= 199) {
      calc.baseColorCost = 1.05;
      calc.additionalColorCost = 0.10;
    } else if (calc.printQuantity >= 200 && calc.printQuantity <= 299) {
      calc.baseColorCost = 0.95;
      calc.additionalColorCost = 0.10;
    } else if (calc.printQuantity >= 300 && calc.printQuantity <= 499) {
      calc.baseColorCost = 0.75;
      calc.additionalColorCost = 0.05;
    } else if (calc.printQuantity >= 500 && calc.printQuantity <= 749) {
      calc.baseColorCost = 0.70;
      calc.additionalColorCost = 0.05;
    } else if (calc.printQuantity >= 750 && calc.printQuantity <= 999) {
      calc.baseColorCost = 0.65;
      calc.additionalColorCost = 0.05;
    } else if (calc.printQuantity >= 1000 && calc.printQuantity <= 1999) {
      calc.baseColorCost = 0.62;
      calc.additionalColorCost = 0.05;
    } else if (calc.printQuantity >= 2000) {
      calc.baseColorCost = 0.58;
      calc.additionalColorCost = 0.05;
    }

    if (!calc.hatMatrixEnabled) {
      /**
       * Assign apparel retail charge based on retail charge table
       */
      if (calc.printQuantity <= 23) {
        calc.retailCharge = 4.10;
      } else if (calc.printQuantity >= 24 && calc.printQuantity <= 35) {
        calc.retailCharge = 3.70;
      } else if (calc.printQuantity >= 36 && calc.printQuantity <= 47) {
        calc.retailCharge = 3.30;
      } else if (calc.printQuantity >= 48 && calc.printQuantity <= 71) {
        calc.retailCharge = 2.50;
      } else if (calc.printQuantity >= 72 && calc.printQuantity <= 143) {
        calc.retailCharge = 1.80;
      } else if (calc.printQuantity >= 144 && calc.printQuantity <= 199) {
        calc.retailCharge = 0.95;
      } else if (calc.printQuantity >= 200 && calc.printQuantity <= 299) {
        calc.retailCharge = 0.85;
      } else if (calc.printQuantity >= 300 && calc.printQuantity <= 499) {
        calc.retailCharge = 0.75;
      } else if (calc.printQuantity >= 500 && calc.printQuantity <= 749) {
        calc.retailCharge = 0.65;
      } else if (calc.printQuantity >= 750 && calc.printQuantity <= 999) {
        calc.retailCharge = 0.55;
      } else if (calc.printQuantity >= 1000 && calc.printQuantity <= 1999) {
        calc.retailCharge = 0.45;
      } else if (calc.printQuantity >= 2000) {
        calc.retailCharge = 0.40;
      }

      /**
       * Assign baseLevelPrice according to selected base level range
       */
      switch(calc.baseLevelOption) {
        case '1':
          calc.baseLevelPrice = 5.00;
          break;
        case '2':
          calc.baseLevelPrice = 6.50;
          break;
        case '3':
          calc.baseLevelPrice = 8.00;
          break;
        case '4':
          calc.baseLevelPrice = 9.50;
          break;
        case '5':
          calc.baseLevelPrice = 11.00;
          break;
        case '6':
          calc.baseLevelPrice = 12.50;
          break;
        case '7':
          calc.baseLevelPrice = 14.00;
          break;
        case '8':
          calc.baseLevelPrice = 16.00;
          break;
        case '9':
          calc.baseLevelPrice = 19.50;
          break;
        case '10':
          calc.baseLevelPrice = 22.00;
          break;
      }

      calc.calculateQuantityTotals();
      calc.getPrintColors();
      calc.getPrintZoneTotals();
      calc.getPrintPrice();
      calc.getProductTotal();
      calc.getScreenTotal();

      console.log(calc.printZone1Colors);
      console.log(calc.numberOfPrintColors + '# of colors');
      console.log(calc.zone1Total + ' zone1Total');
      console.log(calc.printZone1Colors >= 2);

      /**
      console.log(calc.screenTotal + ' screenTotal');
      console.log(calc.printPrice + ' printPrice');
      console.log(calc.printPrice * calc.printQuantity + ' printTotal');
      console.log(calc.numberOfPrintColors + ' print colors');
      console.log(calc.productTotal + ' productTotal');
      console.log(calc.zone1Total + ' zone1Total');
      */

      /**
       * retailChargeTotal = printQuantity * retailCharge
       * @var [type]
       */
      calc.retailChargeTotal = calc.printQuantity * calc.retailCharge;

      /**
       * Calculate Final Costs
       */
      calc.wholesalePrice    = calc.prePurchaseStatus == 0 ?
                                calc.productTotal +
                                calc.oneColorNumberTotal + calc.twoColorNumberTotal +
                                calc.colorChangeTotal + calc.transferTotal +
                                calc.personalizationTotal +
                                (calc.printPrice * calc.printQuantity) + calc.screenTotal :
                                calc.oneColorNumberTotal + calc.twoColorNumberTotal +
                                calc.colorChangeTotal + calc.transferTotal +
                                calc.personalizationTotal +
                                (calc.printPrice * calc.printQuantity) + calc.screenTotal;

      calc.retailPrice       = calc.prePurchaseStatus == 0 ?
                                calc.wholesalePrice + calc.retailChargeTotal :
                                calc.wholesalePrice + calc.retailChargeTotal + calc.productTotal;

      calc.costPerItem       = calc.wholesalePrice / calc.printQuantity;
      calc.retailCostPerItem = calc.retailPrice / calc.printQuantity;

      calc.displayResults(calc.wholesalePrice, calc.retailPrice, calc.costPerItem, calc.retailCostPerItem);
    } else {
      calc.retailCharge = 0.2;
      /**
       * Assign baseLevelPrice according to selected base level range
       */
      switch(calc.baseLevelOption) {
        case '1':
          calc.baseLevelPrice = 3.00;
          break;
        case '2':
          calc.baseLevelPrice = 3.75;
          break;
        case '3':
          calc.baseLevelPrice = 4.50;
          break;
        case '4':
          calc.baseLevelPrice = 5.25;
          break;
        case '5':
          calc.baseLevelPrice = 6.00;
          break;
        case '6':
          calc.baseLevelPrice = 6.75;
          break;
        case '7':
          calc.baseLevelPrice = 7.50;
          break;
        case '8':
          calc.baseLevelPrice = 8.25;
          break;
        case '9':
          calc.baseLevelPrice = 9.00;
          break;
        case '10':
          calc.baseLevelPrice = 9.75;
          break;
      }

      calc.calculateQuantityTotals();
      calc.getPrintColors();
      calc.getPrintZoneTotals();
      calc.getPrintPrice();
      calc.getProductTotal();
      calc.getScreenTotal();

      /**
       * Retail price must be calculated before wholesale in headwear matrix
       */
      calc.retailPrice = calc.prePurchaseStatus == 0 ?
                          calc.productTotal +
                          calc.oneColorNumberTotal + calc.twoColorNumberTotal +
                          calc.colorChangeTotal + calc.transferTotal +
                          calc.personalizationTotal +
                          (calc.printPrice * calc.printQuantity) + calc.screenTotal :
                          calc.oneColorNumberTotal + calc.twoColorNumberTotal +
                          calc.colorChangeTotal + calc.transferTotal +
                          calc.personalizationTotal +
                          (calc.printPrice * calc.printQuantity) + calc.screenTotal;

      /*
       * retailChargeTotal == wholesaleDiscount in headwear matrix
       * retailChargeTotal not applied to retailPrice in this instance
       */
      calc.retailChargeTotal = (calc.retailPrice - calc.screenTotal) * calc.retailCharge;
      calc.wholesalePrice    = calc.prePurchaseStatus == 1 ? calc.retailPrice : calc.retailPrice - calc.retailChargeTotal;

      calc.costPerItem       = calc.wholesalePrice / calc.printQuantity;
      calc.retailCostPerItem = calc.retailPrice / calc.printQuantity;

      calc.displayResults(calc.wholesalePrice, calc.retailPrice, calc.costPerItem, calc.retailCostPerItem);
    }
  }
};

/**
 * Call calc function on click
 */
$('#calculateCosts').on(calc.listenType, function() {
  calc.calculate();
});

/**
 * Watch for toggle between apparel and headwear matrix
 * Hide/show headwear/apparel hints tables
 * recalculate on change
 */
$('#matrixSelect').on('change', function (e) {
  calc.hatMatrixEnabled = $('#matrixSelect').val() == 1 ? true : false;

  if (calc.hatMatrixEnabled) {
    $('.baseLevelTableHeadwear').show();
    $('.baseLevelTableApparel').hide();
  } else {
    $('.baseLevelTableHeadwear').hide();
    $('.baseLevelTableApparel').show();
  }

  calc.calculate();
});
</script>
